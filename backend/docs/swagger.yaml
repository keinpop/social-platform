basePath: /api
definitions:
  company.Company:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
  programm.Programm:
    properties:
      duration:
        type: integer
      id:
        type: integer
      title:
        type: string
    type: object
  role.Role:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
  technology.Techonology:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /company:
    delete:
      consumes:
      - application/json
      description: 'Usage Example: ''curl -X DELETE -v -H "Content-Type: application/json"
        -d ''{"title":"JetBrains"}'' http://localhost:8080/api/company/'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
      summary: delete company in db
      tags:
      - Company-API
    post:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X POST -v -H "Content-Type: application/json"
        -d ''{"title":"Yandex"}'' http://localhost:8080/api/company'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/company.Company'
      summary: post new company in db
      tags:
      - Company-API
  /company/list:
    get:
      consumes:
      - application/json
      description: 'Usage example: ''curl http://localhost:8080/api/company/list'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/company.Company'
            type: array
      summary: get all companies in db
      tags:
      - Company-API
  /programm:
    delete:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X DELETE -v -H "Content-Type: application/json"
        -d ''{"title":"ФИИТ"}'' http://localhost:8080/api/programm/'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/programm.Programm'
      summary: delete programm in db
      tags:
      - Programm-API
    post:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X POST -v -H "Content-Type: application/json"
        -d ''{"title":"ПМИ"}'' http://localhost:8080/api/programm'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/programm.Programm'
      summary: post new programm in db
      tags:
      - Programm-API
  /programm/list:
    get:
      consumes:
      - application/json
      description: 'Usage example: ''curl http://localhost:8080/api/programm/list'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/programm.Programm'
            type: array
      summary: get all programmes in db
      tags:
      - Programm-API
  /role:
    delete:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X DELETE -v -H "Content-Type: application/json"
        -d ''{"title":"Frontend-разработчик"}'' http://localhost:8080/api/role/'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      summary: delete role in db
      tags:
      - Role-API
    post:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X POST -v -H "Content-Type: application/json"
        -d ''{"title":"Backend-разработчик"}'' http://localhost:8080/api/role'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      summary: post new role in db
      tags:
      - Role-API
  /role/list:
    get:
      consumes:
      - application/json
      description: 'Usage example: ''curl http://localhost:8080/api/role/list'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/role.Role'
            type: array
      summary: get all roles in db
      tags:
      - Role-API
  /technology:
    delete:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X DELETE -v -H "Content-Type: application/json"
        -d ''{"title":"Python"}'' http://localhost:8080/api/technology/'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/technology.Techonology'
      summary: delete technology in db
      tags:
      - Techonology-API
    post:
      consumes:
      - application/json
      description: 'Usage example: ''curl -X POST -v -H "Content-Type: application/json"
        -d ''{"title":"Golang"}'' http://localhost:8080/api/technology'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/technology.Techonology'
      summary: post new technology in db
      tags:
      - Techonology-API
  /technology/list:
    get:
      consumes:
      - application/json
      description: 'Usage example: ''curl http://localhost:8080/api/technology/list'''
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/technology.Techonology'
            type: array
      summary: get all technologies in db
      tags:
      - Techonology-API
swagger: "2.0"
